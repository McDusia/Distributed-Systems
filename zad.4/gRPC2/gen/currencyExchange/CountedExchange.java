// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: currencyExchange.proto

package currencyExchange;

/**
 * Protobuf type {@code currencyExchange.CountedExchange}
 */
public  final class CountedExchange extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:currencyExchange.CountedExchange)
    CountedExchangeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CountedExchange.newBuilder() to construct.
  private CountedExchange(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CountedExchange() {
    fromCurrencyType_ = 0;
    toCurrencyType_ = 0;
    res_ = 0;
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private CountedExchange(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {
            int rawValue = input.readEnum();

            fromCurrencyType_ = rawValue;
            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            toCurrencyType_ = rawValue;
            break;
          }
          case 24: {

            res_ = input.readUInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return CurrencyExchangeProto.internal_static_currencyExchange_CountedExchange_descriptor;
  }

  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return CurrencyExchangeProto.internal_static_currencyExchange_CountedExchange_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            CountedExchange.class, CountedExchange.Builder.class);
  }

  public static final int FROM_CURRENCYTYPE_FIELD_NUMBER = 1;
  private int fromCurrencyType_;
  /**
   * <code>.currencyExchange.CurrencyType from_currencyType = 1;</code>
   */
  public int getFromCurrencyTypeValue() {
    return fromCurrencyType_;
  }
  /**
   * <code>.currencyExchange.CurrencyType from_currencyType = 1;</code>
   */
  public CurrencyType getFromCurrencyType() {
    CurrencyType result = CurrencyType.valueOf(fromCurrencyType_);
    return result == null ? CurrencyType.UNRECOGNIZED : result;
  }

  public static final int TO_CURRENCYTYPE_FIELD_NUMBER = 2;
  private int toCurrencyType_;
  /**
   * <code>.currencyExchange.CurrencyType to_currencyType = 2;</code>
   */
  public int getToCurrencyTypeValue() {
    return toCurrencyType_;
  }
  /**
   * <code>.currencyExchange.CurrencyType to_currencyType = 2;</code>
   */
  public CurrencyType getToCurrencyType() {
    CurrencyType result = CurrencyType.valueOf(toCurrencyType_);
    return result == null ? CurrencyType.UNRECOGNIZED : result;
  }

  public static final int RES_FIELD_NUMBER = 3;
  private int res_;
  /**
   * <code>uint32 res = 3;</code>
   */
  public int getRes() {
    return res_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (fromCurrencyType_ != CurrencyType.PLN.getNumber()) {
      output.writeEnum(1, fromCurrencyType_);
    }
    if (toCurrencyType_ != CurrencyType.PLN.getNumber()) {
      output.writeEnum(2, toCurrencyType_);
    }
    if (res_ != 0) {
      output.writeUInt32(3, res_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (fromCurrencyType_ != CurrencyType.PLN.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, fromCurrencyType_);
    }
    if (toCurrencyType_ != CurrencyType.PLN.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, toCurrencyType_);
    }
    if (res_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeUInt32Size(3, res_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof CountedExchange)) {
      return super.equals(obj);
    }
    CountedExchange other = (CountedExchange) obj;

    boolean result = true;
    result = result && fromCurrencyType_ == other.fromCurrencyType_;
    result = result && toCurrencyType_ == other.toCurrencyType_;
    result = result && (getRes()
        == other.getRes());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + FROM_CURRENCYTYPE_FIELD_NUMBER;
    hash = (53 * hash) + fromCurrencyType_;
    hash = (37 * hash) + TO_CURRENCYTYPE_FIELD_NUMBER;
    hash = (53 * hash) + toCurrencyType_;
    hash = (37 * hash) + RES_FIELD_NUMBER;
    hash = (53 * hash) + getRes();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static CountedExchange parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static CountedExchange parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static CountedExchange parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static CountedExchange parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static CountedExchange parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static CountedExchange parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static CountedExchange parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static CountedExchange parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static CountedExchange parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static CountedExchange parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static CountedExchange parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static CountedExchange parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(CountedExchange prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code currencyExchange.CountedExchange}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:currencyExchange.CountedExchange)
      CountedExchangeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return CurrencyExchangeProto.internal_static_currencyExchange_CountedExchange_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return CurrencyExchangeProto.internal_static_currencyExchange_CountedExchange_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              CountedExchange.class, CountedExchange.Builder.class);
    }

    // Construct using currencyExchange.CountedExchange.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      fromCurrencyType_ = 0;

      toCurrencyType_ = 0;

      res_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return CurrencyExchangeProto.internal_static_currencyExchange_CountedExchange_descriptor;
    }

    public CountedExchange getDefaultInstanceForType() {
      return CountedExchange.getDefaultInstance();
    }

    public CountedExchange build() {
      CountedExchange result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public CountedExchange buildPartial() {
      CountedExchange result = new CountedExchange(this);
      result.fromCurrencyType_ = fromCurrencyType_;
      result.toCurrencyType_ = toCurrencyType_;
      result.res_ = res_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof CountedExchange) {
        return mergeFrom((CountedExchange)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(CountedExchange other) {
      if (other == CountedExchange.getDefaultInstance()) return this;
      if (other.fromCurrencyType_ != 0) {
        setFromCurrencyTypeValue(other.getFromCurrencyTypeValue());
      }
      if (other.toCurrencyType_ != 0) {
        setToCurrencyTypeValue(other.getToCurrencyTypeValue());
      }
      if (other.getRes() != 0) {
        setRes(other.getRes());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      CountedExchange parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (CountedExchange) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int fromCurrencyType_ = 0;
    /**
     * <code>.currencyExchange.CurrencyType from_currencyType = 1;</code>
     */
    public int getFromCurrencyTypeValue() {
      return fromCurrencyType_;
    }
    /**
     * <code>.currencyExchange.CurrencyType from_currencyType = 1;</code>
     */
    public Builder setFromCurrencyTypeValue(int value) {
      fromCurrencyType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.currencyExchange.CurrencyType from_currencyType = 1;</code>
     */
    public CurrencyType getFromCurrencyType() {
      CurrencyType result = CurrencyType.valueOf(fromCurrencyType_);
      return result == null ? CurrencyType.UNRECOGNIZED : result;
    }
    /**
     * <code>.currencyExchange.CurrencyType from_currencyType = 1;</code>
     */
    public Builder setFromCurrencyType(CurrencyType value) {
      if (value == null) {
        throw new NullPointerException();
      }

      fromCurrencyType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.currencyExchange.CurrencyType from_currencyType = 1;</code>
     */
    public Builder clearFromCurrencyType() {

      fromCurrencyType_ = 0;
      onChanged();
      return this;
    }

    private int toCurrencyType_ = 0;
    /**
     * <code>.currencyExchange.CurrencyType to_currencyType = 2;</code>
     */
    public int getToCurrencyTypeValue() {
      return toCurrencyType_;
    }
    /**
     * <code>.currencyExchange.CurrencyType to_currencyType = 2;</code>
     */
    public Builder setToCurrencyTypeValue(int value) {
      toCurrencyType_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>.currencyExchange.CurrencyType to_currencyType = 2;</code>
     */
    public CurrencyType getToCurrencyType() {
      CurrencyType result = CurrencyType.valueOf(toCurrencyType_);
      return result == null ? CurrencyType.UNRECOGNIZED : result;
    }
    /**
     * <code>.currencyExchange.CurrencyType to_currencyType = 2;</code>
     */
    public Builder setToCurrencyType(CurrencyType value) {
      if (value == null) {
        throw new NullPointerException();
      }

      toCurrencyType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.currencyExchange.CurrencyType to_currencyType = 2;</code>
     */
    public Builder clearToCurrencyType() {

      toCurrencyType_ = 0;
      onChanged();
      return this;
    }

    private int res_ ;
    /**
     * <code>uint32 res = 3;</code>
     */
    public int getRes() {
      return res_;
    }
    /**
     * <code>uint32 res = 3;</code>
     */
    public Builder setRes(int value) {

      res_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>uint32 res = 3;</code>
     */
    public Builder clearRes() {

      res_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:currencyExchange.CountedExchange)
  }

  // @@protoc_insertion_point(class_scope:currencyExchange.CountedExchange)
  private static final CountedExchange DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new CountedExchange();
  }

  public static CountedExchange getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CountedExchange>
      PARSER = new com.google.protobuf.AbstractParser<CountedExchange>() {
    public CountedExchange parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new CountedExchange(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CountedExchange> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<CountedExchange> getParserForType() {
    return PARSER;
  }

  public CountedExchange getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

